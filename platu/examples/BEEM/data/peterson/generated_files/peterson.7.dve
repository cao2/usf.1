
// peterson mutual exclusion protocol for N processes




byte pos[5];
byte step[5];



process P_0 {
byte j=0, k=0;
state NCS, CS, wait ,q2,q3;
init NCS;
trans
 NCS -> wait { effect j = 1; },
 wait -> q2  { guard j < 5; effect pos[0] = j;},
 q2 -> q3 { effect step[j-1] = 0, k = 0; },
 q3 -> q3 { guard k < 5 && (k == 0 || pos[k] < j); effect k = k+1;},
 q3 -> wait { guard step[j-1] != 0 || k == 5; effect j = j+1;},
 wait -> CS { guard j == 5; },
 CS -> NCS { effect pos[0] = 0;};
}
process P_1 {
byte j=0, k=0;
state NCS, CS, wait ,q2,q3;
init NCS;
trans
 NCS -> wait { effect j = 1; },
 wait -> q2  { guard j < 5; effect pos[1] = j;},
 q2 -> q3 { effect step[j-1] = 1, k = 0; },
 q3 -> q3 { guard k < 5 && (k == 1 || pos[k] < j); effect k = k+1;},
 q3 -> wait { guard step[j-1] != 1 || k == 5; effect j = j+1;},
 wait -> CS { guard j == 5; },
 CS -> NCS { effect pos[1] = 0;};
}
process P_2 {
byte j=0, k=0;
state NCS, CS, wait ,q2,q3;
init NCS;
trans
 NCS -> wait { effect j = 1; },
 wait -> q2  { guard j < 5; effect pos[2] = j;},
 q2 -> q3 { effect step[j-1] = 2, k = 0; },
 q3 -> q3 { guard k < 5 && (k == 2 || pos[k] < j); effect k = k+1;},
 q3 -> wait { guard step[j-1] != 2 || k == 5; effect j = j+1;},
 wait -> CS { guard j == 5; },
 CS -> NCS { effect pos[2] = 0;};
}
process P_3 {
byte j=0, k=0;
state NCS, CS, wait ,q2,q3;
init NCS;
trans
 NCS -> wait { effect j = 1; },
 wait -> q2  { guard j < 5; effect pos[3] = j;},
 q2 -> q3 { effect step[j-1] = 3, k = 0; },
 q3 -> q3 { guard k < 5 && (k == 3 || pos[k] < j); effect k = k+1;},
 q3 -> wait { guard step[j-1] != 3 || k == 5; effect j = j+1;},
 wait -> CS { guard j == 5; },
 CS -> NCS { effect pos[3] = 0;};
}
process P_4 {
byte j=0, k=0;
state NCS, CS, wait ,q2,q3;
init NCS;
trans
 NCS -> wait { effect j = 1; },
 wait -> q2  { guard j < 5; effect pos[4] = j;},
 q2 -> q3 { effect step[j-1] = 4, k = 0; },
 q3 -> q3 { guard k < 5 && (k == 4 || pos[k] < j); effect k = k+1;},
 q3 -> wait { guard step[j-1] != 4 || k == 5; effect j = j+1;},
 wait -> CS { guard j == 5; },
 CS -> NCS { effect pos[4] = 0;};
}


system async;






