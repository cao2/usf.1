<main>
	<const>
		SinChanIndex = 1;
		Sout_I_OkChanIndex = 2;
		Sout_I_DkChanIndex = 3;
		Sout_I_NokChanIndex = 4;
		FChanIndex = 5;
		GChanIndex = 6;
		AChanIndex = 7;
		BChanIndex = 8;
		Rout_I_OkChanIndex = 9;
		Rout_I_IncChanIndex = 10;
		Rout_I_FstChanIndex = 11;
		Rout_I_NokChanIndex = 12;

		SAME = 0;
		OTHER = 1;
		n = 3;
	</const>

	<var>
		activeChan = 0;
		SYNC = 76;
		maxtime = 77;
		X = 0;
		U = 0;
		V = 0;
		W = 0;
		Z = 0;

		File = SAME;
	</var>

	Clock c(activeChan, SYNC, X, U, V, W, Z, re.state, send.state, k.state, l.state, maxtime);

	SClient sc(activeChan, File, OTHER, SinChanIndex, send.SinAckReady, Sout_I_OkChanIndex, Sout_I_DkChanIndex, Sout_I_NokChanIndex);

	RClient rc(activeChan, SAME, File, Rout_I_FstChanIndex, Rout_I_OkChanIndex, Rout_I_IncChanIndex, Rout_I_NokChanIndex);

	Sender send(activeChan, SinChanIndex, X, FChanIndex, k.FAckReady, k.triple, n, BChanIndex, Sout_I_DkChanIndex, sc.Sout_I_DkAckReady , Sout_I_NokChanIndex, sc.Sout_I_NokAckReady, Sout_I_OkChanIndex, sc.Sout_I_OkAckReady, SYNC);

	Receiver re(activeChan, GChanIndex, W, Z, Rout_I_OkChanIndex, rc.Rout_I_OkAckReady, Rout_I_IncChanIndex, rc.Rout_I_IncAckReady, Rout_I_FstChanIndex, rc.Rout_I_FstAckReady, AChanIndex, l.AAckReady, Rout_I_NokChanIndex, rc.Rout_I_NoKAckReady);

	KCl k(activeChan, FChanIndex, U, GChanIndex, re.GAckReady, re.triple);

	LCl l(activeChan, AChanIndex, V, BChanIndex, send.BAckReady);
	

</main>

<class name="Clock" arg="activeChan, SYNC, X, U, V, W, Z, ReceiverState, SenderState, KState, LState, maxtime">
	<const>
		time = 0;
	</const>

	<m>
		time
	</m>

	<tr label="0" preset="time" postset="time">
		guard(activeChan == 0
		&& (ReceiverState != 1 || W + 1 <= 0)
		&& (ReceiverState != 2 || W + 1 <= 0)
		&& (ReceiverState != 3 || W + 1 <= 0)
		&& (ReceiverState != 4 || Z + 1 <= 2*3*2*5+1+3*5 )

		&& (SenderState != 1 || X + 1 <= 0)
		&& (SenderState != 2 || X + 1 <= 2*5+1)
		&& (SenderState != 3 || X + 1 <= 0)
		&& (SenderState != 4 || X + 1 <= SYNC)

		&& (KState != 1 || U + 1 <= 5)
		&& (LState != 1 || V + 1 <= 5)
	
		&& (X < maxtime ||
		    U < maxtime ||
		    V < maxtime ||
		    W < maxtime ||
		    Z < maxtime)
		);
		delay(0, inf);
		X = X + (X < maxtime);
		U = U + (U < maxtime);
		V = V + (V < maxtime);
		W = W + (W < maxtime);
		Z = Z + (Z < maxtime);
	</tr>
</class>

<class name="SClient" arg="activeChan, File, OTHER, SinChanIndex, SinAckReady, Sout_I_OkChanIndex, Sout_I_DkChanIndex, Sout_I_NokChanIndex">
	<const>
		ok = 0;
		dk = 1;
		nok = 2;
		send_req = 3;
		file_req = 4;
	</const>

	<var>
		Sout_I_OkAckReady = 0;
		Sout_I_DkAckReady = 0;
		Sout_I_NokAckReady = 0;
	</var>

	<m>
		ok
	</m>

	<tr label="0" preset="ok" postset="send_req">
		guard(activeChan == 0);
		delay(0, inf);
		File = OTHER;
	</tr>

	<tr label="1" preset="dk" postset="send_req">
		guard(activeChan == 0);
		delay(0, inf);
		File = OTHER
	</tr>

	<tr label="2" preset="nok" postset="send_req">
		guard(activeChan == 0);
		delay(0, inf);
		File = OTHER;
	</tr>

	<tr label="3" preset="send_req" postset="file_req">
		guard(activeChan == 0 && SinAckReady > 0);
		delay(0, inf);
		Sout_I_OkAckReady = Sout_I_OkAckReady + 1;
		Sout_I_DkAckReady = Sout_I_DkAckReady + 1;
		Sout_I_NokAckReady = Sout_I_NokAckReady + 1;
		activeChan = SinChanIndex;
	</tr>

	<tr label="4" preset="file_req" postset="ok">
		guard(activeChan == Sout_I_OkChanIndex);
		delay(0, inf);
		Sout_I_OkAckReady = Sout_I_OkAckReady - 1;
		Sout_I_DkAckReady = Sout_I_DkAckReady - 1;
		Sout_I_NokAckReady = Sout_I_NokAckReady - 1;
		activeChan = 0;
	</tr>

	<tr label="5" preset="file_req" postset="dk">
		guard(activeChan == Sout_I_DkChanIndex);
		Sout_I_OkAckReady = Sout_I_OkAckReady - 1;
		Sout_I_DkAckReady = Sout_I_DkAckReady - 1;
		Sout_I_NokAckReady = Sout_I_NokAckReady - 1;
		activeChan = 0;
	</tr>

	<tr label="6" preset="file_req" postset="nok">
		guard(activeChan == Sout_I_NokChanIndex);
		Sout_I_OkAckReady = Sout_I_OkAckReady - 1;
		Sout_I_DkAckReady = Sout_I_DkAckReady - 1;
		Sout_I_NokAckReady = Sout_I_NokAckReady - 1;
		activeChan = 0;
	</tr>
</class>

<class name="RClient" arg="activeChan, SAME, File, Rout_I_FstChanIndex, Rout_I_OkChanIndex, Rout_I_IncChanIndex, Rout_I_NokChanIndex">
	<const>
		ok = 0;
		inc = 1;
		nok = 2;
	</const>

	<var>
		Rout_I_FstAckReady = 1;
		Rout_I_OkAckReady = 1;
		Rout_I_IncAckReady = 0;
		Rout_I_NoKAckReady = 0;
	</var>

	<m>
		ok
	</m>

	<tr label="0" preset="ok" postset="inc">
		guard(activeChan == Rout_I_FstChanIndex);
		delay(0, inf);
		Rout_I_FstAckReady = Rout_I_FstAckReady - 1;
		Rout_I_NoKAckReady = Rout_I_NoKAckReady + 1;
		Rout_I_IncAckReady = Rout_I_IncAckReady + 1;
		activeChan = 0;
		File = SAME;
	</tr>

	<tr label="1" preset="ok" postset="ok">
		guard(activeChan == Rout_I_OkChanIndex);
		delay(0, inf);
		activeChan = 0;
		File = SAME;
	</tr>

	<tr label="2" preset="inc" postset="inc">
		guard(activeChan == Rout_I_IncChanIndex);
		delay(0, inf);
		activeChan = 0;
	</tr>

	<tr label="3" preset="inc" postset="ok">
		guard(activeChan == Rout_I_OkChanIndex);
		delay(0, inf);
		Rout_I_FstAckReady = Rout_I_FstAckReady + 1;
		Rout_I_NoKAckReady = Rout_I_NoKAckReady - 1;
		Rout_I_IncAckReady = Rout_I_IncAckReady - 1;
		activeChan = 0;
	</tr>

	<tr label="4" preset="inc" postset="nok">
		guard(activeChan == Rout_I_NokChanIndex);	
		delay(0, inf);
		Rout_I_FstAckReady = Rout_I_FstAckReady + 1;
		Rout_I_NoKAckReady = Rout_I_NoKAckReady - 1;
		Rout_I_IncAckReady = Rout_I_IncAckReady - 1;
		activeChan = 0;
	</tr>

	<tr label="5" preset="nok" postset="inc">
		guard(activeChan == Rout_I_FstChanIndex);
		delay(0, inf);
		activeChan = 0;
		File = SAME;
		Rout_I_FstAckReady = Rout_I_FstAckReady - 1;
		Rout_I_NoKAckReady = Rout_I_NoKAckReady + 1;
		Rout_I_IncAckReady = Rout_I_IncAckReady + 1;
	</tr>

	<tr label="6" preset="nok" postset="ok">
		guard(activeChan == Rout_I_OkChanIndex);
		delay(0, inf);
		activeChan = 0;
		File = SAME;
	</tr>
</class>

<class name="Sender" arg="activeChan, SinChanIndex, X, FChanIndex, FAckReady, FVar, n, BChanIndex, Sout_I_DkChanIndex, Sout_I_DkAckReady, Sout_I_NokChanIndex, Sout_I_NokAckReady, Sout_I_OkChanIndex, Sout_I_OkAckReady, SYNC">
	<const>
		init_state = 0;
		idle = 1;
		next_frame = 2;
		wait_ack = 3;
		success = 4;
		error = 5;
	</const>

	<var>
		ab = 0;
		i = 0;
		rc = 0;
		state = 0;

		SinAckReady = 0;
		BAckReady = 0;
	</var>

	<m>
		init_state
	</m>

	<tr label="0" preset="init_state" postset="idle">
		guard(activeChan == 0);
		delay(0, inf);
		ab = 0;
		SinAckReady = SinAckReady + 1;
	</tr>

	<tr label="1" preset="idle" postset="next_frame">
		guard(activeChan == SinChanIndex);
		delay(0, inf);
		activeChan  = 0;
		SinAckReady = SinAckReady - 1;
		X = 0;
		i = 1;
		state = 1;
	</tr>

	<tr label="2" preset="next_frame" postset="wait_ack">
		guard(activeChan == 0 && FAckReady > 0);
		delay(0, inf);
		activeChan = FChanIndex
		FVar = ((i == 1)*4 + (i==n)*2 + ab);
		rc = 0;
		BAckReady = BAckReady + 1;
		state = 2;
	</tr>

	<tr label="3" preset="wait_ack" postset="wait_ack">
		guard(activeChan == 0 && FAckReady > 0 && (X == 2*5+1) && (rc < 3));
		delay(0, inf);
		FVar = ((i == 1)*4 + (i==n)*2 + ab);
		X = 0;
		rc = rc + 1;
	</tr>

	<tr label="4" preset="wait_ack" postset="success">
		guard(activeChan == BChanIndex && X < 2*5+1);
		delay(0, inf);
		X = 0;
		ab = 1 - ab;
		activeChan = 0;
		BAckReady = BAckReady - 1;
		state = 3;
	</tr>

	<tr label="5" preset="wait_ack" postset="error">
		guard(activeChan == 0 && Sout_I_DkAckReady > 0 && X == 2*5+1 && rc == 3 && i == n);
		delay(0, inf);
		X = 0;
		activeChan = Sout_I_DkChanIndex;
		BAckReady = BAckReady - 1;
		state = 4;
	</tr>

	<tr label="6" preset="wait_ack" postset="error">
		guard(activeChan == 0 && Sout_I_NokAckReady > 0 && X == 2*5+1 && rc == 3 && i < n);
		delay(0, inf);
		activeChan = Sout_I_NokChanIndex;
		BAckReady = BAckReady - 1;
		X = 0;
		state = 4;
	</tr>

	<tr label="7" preset="success" postset="next_frame">
		guard(activeChan == 0 && i < n);
		delay(0, inf);
		i = i + 1;
		state = 1;
	</tr>

	<tr label="8" preset="success" postset="idle">
		guard(activeChan == 0 && i == n && Sout_I_OkAckReady > 0);
		delay(0, inf);
		activeChan = Sout_I_OkChanIndex;
		SinAckReady = SinAckReady + 1;
		state = 0;
	</tr>

	<tr label="9" preset="error" postset="idle">
		guard(activeChan == 0 && X == SYNC);
		delay(0, inf);
		SinAckReady = SinAckReady + 1;
		state = 0;
		ab = 0;
	</tr>
</class>

<class name="Receiver" arg="activeChan, GChanIndex, W, Z, Rout_I_OkChanIndex, Rout_I_OkAckReady, Rout_I_IncChanIndex, Rout_I_IncAckReady, Rout_I_FstChanIndex, Rout_I_FstAckReady, AChanIndex, AAckReady, Rout_I_NokChanIndex, Rout_I_NokAckReady">

	<const>
		new_file = 0;
		first_safe_frame =1;
		frame_received = 2;
		frame_reported = 3;
		idle = 4;
	</const>

	<var>
		exp_ab = 0;
		triple = 0;
		
		GAckReady = 1;
		state = 0;
	</var>

	<m>
		new_file
	</m>

	<tr label="0" preset="new_file" postset="first_safe_frame">
		guard(activeChan == GChanIndex);
		delay(0, inf);
		activeChan = 0;
		GAckReady = GAckReady - 1;
		W = 0;
		Z = 0;
		state = 1;
	</tr>

	<tr label="1" preset="first_safe_frame" postset="frame_received">
		guard(activeChan == 0);
		delay(0, inf);
		exp_ab = (triple & 1);
		state = 2;
	</tr>

	<tr label="2" preset="frame_received" postset="frame_reported">
		guard( ((triple & 1) == exp_ab) && ((triple & 2) == 2) && activeChan == 0 && Rout_I_OkAckReady > 0);
		delay(0, inf);
		activeChan = Rout_I_OkChanIndex;
		state = 3;
	</tr>

	<tr label="3" preset="frame_received" postset="frame_reported">
		guard( ((triple & 1) == exp_ab) && ((triple & 6) == 0) && activeChan == 0 && Rout_I_IncAckReady > 0);
		delay(0, inf);
		activeChan = Rout_I_IncChanIndex;
		state = 3;
	</tr>

	<tr label="4" preset="frame_received" postset="frame_reported">
		guard( ((triple & 1) == exp_ab) && ((triple & 6) == 4) && activeChan == 0 && Rout_I_FstAckReady > 0);
		delay(0, inf);
		activeChan = Rout_I_FstChanIndex;
		state = 3;
	</tr>

	<tr label="5" preset="frame_received" postset="idle">
		guard( ((triple & 1) != exp_ab) && activeChan == 0 && AAckReady > 0);
		delay(0, inf);
		activeChan = AChanIndex;
		GAckReady = GAckReady + 1;
		state = 4;
	</tr>

	<tr label="6" preset="frame_reported" postset="idle">
		guard(activeChan == 0 && AAckReady > 0);
		delay(0, inf);
		Z = 0;
		exp_ab = 1 -exp_ab;
		activeChan = AChanIndex;
		GAckReady = GAckReady + 1;
		state = 4;
	</tr>

	<tr label="7" preset="idle" postset="new_file">
		guard(activeChan == 0 && (Z == 2*3*2*5+1+3*5) && ((triple & 2) == 2));
		delay(0, inf);
		state = 0;
		GAckReady = GAckReady - 1;
	</tr>

	<tr label="8" preset="idle" postset="new_file">
		guard(activeChan == 0 && (Z == 2*3*2*5+1+3*5) && ((triple & 2) == 0) && Rout_I_NokAckReady > 0);
		delay(0, inf);
		activeChan = Rout_I_NokChanIndex
		state = 0;
		GAckReady = GAckReady - 1;
	</tr>

	<tr label="9" preset="idle" postset="frame_received">
		guard(activeChan == GChanIndex && (Z< 2*3*2*5+1+3*5));
		delay(0, inf);
		activeChan = 0;
		W = 0;
		GAckReady = GAckReady - 1;
		state = 2;
	</tr>
</class>

<class name="KCl" arg="activeChan, FChanIndex, U, GChanIndex, GAckReady, GVar">
	<const>
		start = 0;
		in_transit = 1;
		BAD = 2;
	</const>

	<var>
		triple = 0;
		state = 0;
		FAckReady = 1;
	</var>

	<m>
		start
	</m>

	<tr label="0" preset="start" postset="in_transit">
		guard(activeChan == FChanIndex);
		delay(0, inf);
		U = 0;
		activeChan = 0;
		state = 1;
	</tr>

	<tr label="1" preset="in_transit" postset="start">
		guard(activeChan == 0 && U > 0 && U <= 5);
		delay(0, inf);
		state = 0;
	</tr>

	<tr label="2" preset="in_transit" postset="start">
		guard(activeChan == 0 && GAckReady > 0 && U > 0 && U<= 5);
		delay(0, inf);
		activeChan = GChanIndex;
		GVar = triple;
		state = 0;
	</tr>

	<tr label="3" preset="in_transit" postset="BAD">
		guard(activeChan == FChanIndex);
		delay(0, inf);
		activeChan = 0;
		state = 0;
	</tr>
</class>

<class name="LCl" arg="activeChan, AChanIndex, V, BChanIndex, BAckReady">
	<const>
		start = 0;
		in_transit = 1;
		BAD = 2;
	</const>

	<var>
		AAckReady = 1;
		state = 0;
	</var>

	<m>
		start
	</m>

	<tr label="0" preset="start" postset="in_transit">
		guard(activeChan == AChanIndex);
		delay(0, inf);
		activeChan = 0;
		V = 0;
		state = 1;
	</tr>

	<tr label="1" preset="in_transit" postset="start">
		guard(activeChan == 0 && V>0 && V <= 5);
		delay(0, inf);
		state = 0;
	</tr>

	<tr label="2" preset="in_transit" postset="start">
		guard(activeChan == 0 && BAckReady > 0 && V > 0 && V <= 5);
		delay(0, inf);
		activeChan = BChanIndex;
		state = 0;
	</tr>

	<tr label="3" preset="in_transit" postset="BAD">
		guard(activeChan == AChanIndex);
		delay(0, inf);
		activeChan = 0;
		state = 0;
	</tr>
</class>
